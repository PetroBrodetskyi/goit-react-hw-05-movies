{"version":3,"file":"static/js/278.88e01c2f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MuviesList/MuviesListItem.module.css?8316","components/MuviesList/MuviesListItem.jsx","components/MuviesList/MuviesList.jsx","pages/Movies/Movies.jsx","serviсes/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postertitle\":\"MuviesListItem_postertitle__42Jhl\",\"postercard\":\"MuviesListItem_postercard__zxsc2\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from \"./MuviesListItem.module.css\"\nimport img from 'img/img.png';\nconsole.log('img:', img);\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport function MoviesListItem({ data: { id, poster_path, title } }) {\n  const location = useLocation();\n  \n  return (\n    <div className={css.postercard}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <h2 className={css.postertitle}>{title}</h2>\n          <img\n            src={poster_path ? BASE_URL + poster_path : img}\n            alt=\"poster\"\n          />\n      </Link>\n      </div>\n  );\n}\n","import { MoviesListItem } from \"./MuviesListItem\";\n\nexport function MoviesList({ data }) {\n    return <>\n            {data.map(item => <MoviesListItem key={`${item.id}${item.title}`} data={item} />)}\n    </>\n}","import { MovieAPI } from \"serviсes/moviesApi\";\nimport { Button } from \"components/Button/Button\";\nimport { MoviesList } from \"components/MuviesList/MuviesList\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst movieAPI = new MovieAPI();\n\nexport default function Movies() {\n    const [sp, setSp] = useSearchParams();\n    const search = sp.get('search')\n    const [inputValue, setInputValue] = useState(search ||'');\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    \n    \n    const handleSubmit = e => {\n        e.preventDefault()\n        const name = e.target.movie.value;\n        if(name)setSp({search: name})\n    }\n\n\n    useEffect(() => {\n        if (!search) return\n        setInputValue(search)\n        async function fetchData() {\n            try {\n                movieAPI.setSearchQuestion(search)\n                const resp = await movieAPI.searchMovies()\n                setMovies(resp.results)\n            } catch (error) {\n                setError(error)\n            }\n        }\n        fetchData()\n    }, [search])\n\n    return (\n      <>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"movie\" value={inputValue} onChange={e => setInputValue(e.target.value)}/>\n          <Button text={'Search'} />\n            </form>\n            {movies.length > 0 && <MoviesList data={movies}/>}\n        {error && <h1>Oooops... Please reload page</h1>}\n      </>\n    );\n}\n\n// https://api.themoviedb.org/3/search/movie?q=batman&page=1\n// https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&page=1","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiNjE3ZGMxMzZlZGFlNjkwMTFmNTZiM2E0M2I3YjRjMCIsInN1YiI6IjY1NWUxZmNlMjY2Nzc4MDE0ZTk0OGE4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jr2tp7PBlGeGpY0LXLeU6Aq5bMm4NVEy8ImAKNU6t7Q';\n\nexport class MovieAPI {\n  config = {\n    params: {\n      query: '',\n      page: 1,\n    },\n  };\n\n  setSearchQuestion(q) {\n    this.config.params.query = q;\n    this.config.params.page = 1;\n  }\n\n  getTrending() {\n    return axios('trending/movie/day', this.config).then(({ data }) => {\n      this.config.params.page += 1;\n      return data;\n    });\n  }\n\n  searchMovies() {\n    return axios('search/movie', this.config).then(({ data }) => {\n      this.config.params.page += 1;\n      return data;\n    });\n  }\n\n  getMovieDetails(movieId) {\n    return axios(`movie/${movieId}`).then(({ data }) => data);\n  }\n\n  getMovieCredits(movieId) {\n    return axios(`movie/${movieId}/credits`).then(({ data }) => data);\n  }\n\n  getMovieReviews(movieId) {\n    return axios(`movie/${movieId}/reviews`).then(({ data }) => data);\n  }\n\n  setParams(params) {\n    this.config.params = {\n      ...this.config.params,\n      ...params,\n    };\n  }\n\n  setConfig(config) {\n    for (const key in config) {\n      this.config[key] = { ...this.config[key], ...config[key] };\n    }\n  }\n}"],"names":["console","log","img","MoviesListItem","_ref","_ref$data","data","id","poster_path","title","location","useLocation","_jsx","className","css","children","_jsxs","Link","to","concat","state","from","src","alt","MoviesList","_Fragment","map","item","movieAPI","MovieAPI","Movies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","sp","setSp","search","get","_useState","useState","_useState2","inputValue","setInputValue","_useState3","_useState4","movies","setMovies","_useState5","_useState6","error","setError","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","setSearchQuestion","searchMovies","sent","results","t0","stop","apply","arguments","fetchData","onSubmit","e","preventDefault","name","target","movie","value","type","onChange","Button","text","length","axios","_classCallCheck","config","params","query","page","_createClass","key","q","this","_this","then","_this2","_ref2","movieId","_ref3","_ref4","_ref5","_objectSpread"],"sourceRoot":""}